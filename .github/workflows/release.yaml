name: Release

on:
  push:
    branches:
      - main

jobs:
  build-tag-release:
    name: Build, tag, and release Docker image and Windows executable
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup release please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: simple
          changelog-path: CHANGELOG.md
          package-name: zap2xml

      - name: Setup Perl for Windows build
        if: ${{ steps.release.outputs.release_created }}
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: "5.40"

      - name: Install Perl dependencies for Windows build
        if: ${{ steps.release.outputs.release_created }}
        run: |
          cpanm --notest PAR::Packer
          cpanm --notest Compress::Zlib
          cpanm --notest Encode
          cpanm --notest File::Basename
          cpanm --notest File::Copy
          cpanm --notest Getopt::Std
          cpanm --notest HTTP::Cookies
          cpanm --notest URI
          cpanm --notest URI::Escape
          cpanm --notest LWP::UserAgent
          cpanm --notest LWP::ConnCache
          cpanm --notest POSIX
          cpanm --notest Time::Local
          cpanm --notest Time::Piece
          cpanm --notest JSON

      - name: Build Windows executable
        if: ${{ steps.release.outputs.release_created }}
        run: pp -o zap2xml.exe zap2xml.pl

      - name: Upload Windows executable to release
        if: ${{ steps.release.outputs.release_created }}
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @zap2xml.exe \
            "${{ steps.release.outputs.upload_url }}?name=zap2xml.exe&label=Windows%20Executable"

      - name: Login into GitHub Container Registry
        if: ${{ steps.release.outputs.release_created }}
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Build Docker image
        if: ${{ steps.release.outputs.release_created }}
        run: |
          docker build \
          -t "ghcr.io/${GITHUB_REPOSITORY}:${{ steps.release.outputs.tag_name }}" \
          -t "ghcr.io/${GITHUB_REPOSITORY}:latest" .

      - name: Release Docker image
        if: ${{ steps.release.outputs.release_created }}
        run: |
          docker push "ghcr.io/${GITHUB_REPOSITORY}:${{ steps.release.outputs.tag_name }}"
          docker push "ghcr.io/${GITHUB_REPOSITORY}:latest"
